{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0412\\u044F\\u0447\\u0435\\u0441\\u043B\\u0430\\u0432\\\\Projects\\\\1479361-what-to-watch-9\\\\src\\\\components\\\\app\\\\app.tsx\",\n    _s = $RefreshSig$();\n\nimport HomePage from '../../pages/home-page/home-page';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport AddReviewPage from '../../pages/add-review-page/add-review-page';\nimport FilmPage from '../../pages/film-page/film-page';\nimport PlayerPage from '../../pages/player-page/player-page';\nimport SignInPage from '../../pages/sign-in-page/sign-in-page';\nimport MyListPage from '../../pages/my-list-page/my-list-page';\nimport NotFoundPage from '../../pages/not-found-page/not-found-page';\nimport { PrivateRoute, PrivateRouteAuthUser } from '../../components/private-route/private-route';\nimport { useAppSelector } from '../../hooks';\nimport LoadingScreen from '../loadin-screen/loading-screen';\nimport HistoryRouter from '../history-route/history-route';\nimport browserHistory from '../../browser-history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const isCheckedAuth = authorizationStatus => authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App() {\n  _s();\n\n  const {\n    authorizationStatus,\n    isDataLoaded\n  } = useAppSelector(state => state);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HistoryRouter, {\n    history: browserHistory,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.Main,\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.MyList,\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          authorizationStatus: authorizationStatus,\n          children: /*#__PURE__*/_jsxDEV(MyListPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.Player,\n        element: /*#__PURE__*/_jsxDEV(PlayerPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.Film,\n        element: /*#__PURE__*/_jsxDEV(FilmPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.SignIn,\n        element: /*#__PURE__*/_jsxDEV(PrivateRouteAuthUser, {\n          authorizationStatus: authorizationStatus,\n          children: /*#__PURE__*/_jsxDEV(SignInPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.AddReview,\n        element: /*#__PURE__*/_jsxDEV(AddReviewPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this); //sdiofsdiofjsdlfsdofsdfksd\n}\n\n_s(App, \"w64P6YOxG6Seano78MR79TXrv0Q=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Вячеслав/Projects/1479361-what-to-watch-9/src/components/app/app.tsx"],"names":["HomePage","Route","Routes","AppRoute","AuthorizationStatus","AddReviewPage","FilmPage","PlayerPage","SignInPage","MyListPage","NotFoundPage","PrivateRoute","PrivateRouteAuthUser","useAppSelector","LoadingScreen","HistoryRouter","browserHistory","isCheckedAuth","authorizationStatus","Unknown","App","isDataLoaded","state","Main","MyList","Player","Film","SignIn","AddReview"],"mappings":"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","sourcesContent":["import HomePage from '../../pages/home-page/home-page';\nimport {Route, Routes} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport AddReviewPage from '../../pages/add-review-page/add-review-page';\nimport FilmPage from '../../pages/film-page/film-page';\nimport PlayerPage from '../../pages/player-page/player-page';\nimport SignInPage from '../../pages/sign-in-page/sign-in-page';\nimport MyListPage from '../../pages/my-list-page/my-list-page';\nimport NotFoundPage from '../../pages/not-found-page/not-found-page';\nimport  { PrivateRoute, PrivateRouteAuthUser } from '../../components/private-route/private-route';\nimport {  useAppSelector } from '../../hooks';\nimport LoadingScreen from '../loadin-screen/loading-screen';\nimport HistoryRouter from '../history-route/history-route';\nimport browserHistory from '../../browser-history';\n\n\nexport const isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App() {\n\n  const {authorizationStatus, isDataLoaded} = useAppSelector((state) => state);\n\n  if(isCheckedAuth(authorizationStatus) || !isDataLoaded){\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <HistoryRouter history={browserHistory} >\n      <Routes>\n        <Route\n          path={AppRoute.Main}\n          element={<HomePage />}\n        />\n        <Route\n          path={AppRoute.MyList}\n          element={\n            <PrivateRoute authorizationStatus={authorizationStatus}>\n              <MyListPage/>\n            </PrivateRoute>\n          }\n        />\n        <Route\n          path={AppRoute.Player}\n          element={<PlayerPage />}\n        />\n        <Route\n          path={AppRoute.Film}\n          element={<FilmPage />}\n        />\n        <Route\n          path={AppRoute.SignIn}\n          element={\n            <PrivateRouteAuthUser authorizationStatus={authorizationStatus}>\n              <SignInPage/>\n            </PrivateRouteAuthUser>\n          }\n        />\n        <Route\n          path={AppRoute.AddReview}\n          element={<AddReviewPage />}\n        />\n        <Route\n          path='*'\n          element={<NotFoundPage/>}\n        />\n      </Routes>\n    </HistoryRouter>\n  );\n\n  //sdiofsdiofjsdlfsdofsdfksd\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}