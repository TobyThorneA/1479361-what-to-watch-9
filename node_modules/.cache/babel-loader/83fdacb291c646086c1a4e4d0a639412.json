{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0412\\u044F\\u0447\\u0435\\u0441\\u043B\\u0430\\u0432\\\\Projects\\\\1479361-what-to-watch-9\\\\src\\\\components\\\\comment-submission-form\\\\comment-submission-form.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { store } from '../../store';\nimport { addCommentsAction, fetchCommentsAction } from '../../store/api-action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COUNT_STARS = 10;\nconst MIN_COMMENT_LENGTH = 50;\nconst MAX_COMMENT_LENGTH = 400;\nconst stars = [...Array(COUNT_STARS).keys()];\n\nconst disabledPostButton = postFormValues => {\n  if (postFormValues.comment.length > MIN_COMMENT_LENGTH && postFormValues.comment.length < MAX_COMMENT_LENGTH) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction CommentSubmissionForm(props) {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const loadingComment = useAppSelector(state => state.loadingComment);\n  const [postFormValues, setPostFormValues] = useState({\n    comment: '',\n    rating: -1\n  });\n\n  const onStarChange = event => {\n    if (event.target) {\n      setPostFormValues({ ...postFormValues,\n        rating: Number(event.currentTarget.value)\n      });\n    }\n  };\n\n  const onStarClick = event => {\n    if (event.target && event.currentTarget.checked) {\n      setPostFormValues({ ...postFormValues,\n        rating: Number(event.currentTarget.value)\n      });\n    }\n  };\n\n  const {\n    rating\n  } = postFormValues;\n\n  const fieldChangeHandler = evt => {\n    evt.preventDefault();\n    const dataCommentFilm = {\n      id: props.id,\n      dataComment: {\n        comment: postFormValues.comment,\n        rating: postFormValues.rating\n      }\n    };\n    dispatch(addCommentsAction(dataCommentFilm));\n    store.dispatch(fetchCommentsAction(props.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-review\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fieldChangeHandler,\n      action: \"\",\n      className: \"add-review__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating__stars\",\n          children: stars.map(it => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setPostFormValues({\n              rating: it + 1,\n              comment: postFormValues.comment\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rating__input\",\n              id: `star-${it}`,\n              type: \"radio\",\n              name: `reting-${it}`,\n              value: it,\n              checked: it < rating,\n              onChange: onStarChange,\n              onClick: onStarClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"rating__label\",\n              htmlFor: `star-${it}`,\n              children: [\"Rating \", it + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, it, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)).reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-review__text\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: evt => setPostFormValues({\n            comment: evt.target.value,\n            rating: postFormValues.rating\n          }),\n          className: \"add-review__textarea\",\n          name: \"review-text\",\n          id: \"review-text\",\n          placeholder: \"Review text\",\n          minLength: 50,\n          maxLength: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-review__submit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: disabledPostButton(postFormValues) || loadingComment,\n            className: \"add-review__btn\",\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentSubmissionForm, \"tVJ7yIBjojFSx8e0NkmDGFRJfJ8=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = CommentSubmissionForm;\nexport default CommentSubmissionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSubmissionForm\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Вячеслав/Projects/1479361-what-to-watch-9/src/components/comment-submission-form/comment-submission-form.tsx"],"names":["useState","useAppDispatch","useAppSelector","store","addCommentsAction","fetchCommentsAction","COUNT_STARS","MIN_COMMENT_LENGTH","MAX_COMMENT_LENGTH","stars","Array","keys","disabledPostButton","postFormValues","comment","length","CommentSubmissionForm","props","dispatch","loadingComment","state","setPostFormValues","rating","onStarChange","event","target","Number","currentTarget","value","onStarClick","checked","fieldChangeHandler","evt","preventDefault","dataCommentFilm","id","dataComment","map","it","reverse"],"mappings":"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","sourcesContent":["import { MouseEvent, ChangeEvent, FormEvent, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { store } from '../../store';\nimport { addCommentsAction, fetchCommentsAction } from '../../store/api-action';\nimport { Film } from '../../types';\n\nconst COUNT_STARS = 10;\nconst MIN_COMMENT_LENGTH = 50;\nconst MAX_COMMENT_LENGTH = 400;\n\nconst stars = [...Array(COUNT_STARS).keys()];\ninterface PostFormValues {\n  comment: string;\n  rating: number;\n}\n\n\nconst disabledPostButton = (postFormValues: PostFormValues): boolean => {\n  if(postFormValues.comment.length > MIN_COMMENT_LENGTH\n    && postFormValues.comment.length < MAX_COMMENT_LENGTH\n  ){\n    return false;\n  }\n  return true;\n};\n\nfunction CommentSubmissionForm(props: Film) {\n  const dispatch = useAppDispatch();\n  const loadingComment = useAppSelector((state) => state.loadingComment);\n\n  const [postFormValues, setPostFormValues] = useState<PostFormValues>({\n    comment: '',\n    rating: -1,\n  });\n\n  const onStarChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target) {\n      setPostFormValues({ ...postFormValues, rating: Number(event.currentTarget.value) });\n    }\n  };\n\n  const onStarClick = (event: MouseEvent<HTMLInputElement>) => {\n    if (event.target && event.currentTarget.checked) {\n      setPostFormValues({ ...postFormValues, rating: Number(event.currentTarget.value) });\n    }\n  };\n\n  const { rating } = postFormValues;\n\n  const fieldChangeHandler = (evt: FormEvent<HTMLFormElement> ) => {\n    evt.preventDefault();\n\n    const dataCommentFilm = {\n      id: props.id,\n      dataComment: {\n        comment: postFormValues.comment,\n        rating: postFormValues.rating,\n      },\n    };\n\n\n    dispatch(addCommentsAction(dataCommentFilm));\n    store.dispatch(fetchCommentsAction(props.id));\n  };\n\n  return (\n    <div  className=\"add-review\">\n      <form onSubmit={ fieldChangeHandler} action=\"\" className=\"add-review__form\">\n        <div className=\"rating\">\n          <div className=\"rating__stars\">\n            {stars.map((it)=> (\n              <div key={it} onClick={() => setPostFormValues({rating: it + 1 , comment: postFormValues.comment})}>\n                <input\n                  className=\"rating__input\" id={`star-${it}`}\n                  type=\"radio\" name={`reting-${it}`}\n                  value={it}\n                  checked={it < rating}\n                  onChange={onStarChange}\n                  onClick={onStarClick}\n                />\n                <label className=\"rating__label\" htmlFor={`star-${it}`}>Rating {it + 1}</label>\n              </div>)).reverse()}\n          </div>\n        </div>\n\n        <div className=\"add-review__text\" >\n          <textarea\n            onChange={(evt) => setPostFormValues({comment: evt.target.value, rating: postFormValues.rating})}\n            className=\"add-review__textarea\"\n            name=\"review-text\" id=\"review-text\"\n            placeholder=\"Review text\"\n            minLength={50}\n            maxLength={400}\n          >\n          </textarea>\n          <div className=\"add-review__submit\">\n            <button disabled={\n              disabledPostButton(postFormValues) || loadingComment\n            }\n            className=\"add-review__btn\" type=\"submit\"\n            >Post\n            </button>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CommentSubmissionForm;\n"]},"metadata":{},"sourceType":"module"}