{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u0412\\u044F\\u0447\\u0435\\u0441\\u043B\\u0430\\u0432\\\\Projects\\\\1479361-what-to-watch-9\\\\src\\\\pages\\\\player-page\\\\player-page.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { APIRoute } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport { playOrPause } from '../../store/action';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst secondsToHms = d => {\n  d = Number(d);\n  const h = Math.floor(d / 3600);\n  const m = Math.floor(d % 3600 / 60);\n  const s = Math.floor(d % 3600 % 60);\n  const hDisplay = h > 0 ? `${h}:` : '';\n  const mDisplay = m > 0 ? `${m}:` : '';\n  const sDisplay = s > 0 ? s : '';\n  return `${hDisplay} ${mDisplay} ${sDisplay}`;\n};\n\nconst fullScreenHandle = () => {\n  const element = document.querySelector('.player__video');\n\n  if (element !== null && element !== void 0 && element.requestFullscreen) {\n    return element === null || element === void 0 ? void 0 : element.requestFullscreen();\n  }\n};\n\nfunction PlayerPage() {\n  _s();\n\n  const videoRef = useRef(null);\n  const allFilms = useAppSelector(state => state.allFilms);\n  const playPause = useAppSelector(state => state.playOrPause);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const dataFilm = allFilms.find(it => it.id === Number(id));\n  const [time, setTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [timeToogler, setTimeToogler] = useState(0);\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      if (videoRef.current) {\n        setTime(videoRef.current.currentTime);\n        setDuration(videoRef.current.duration - time);\n        setTimeToogler(time * 100 / videoRef.current.duration);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [time, duration, playPause]);\n\n  if (!dataFilm) {\n    return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      src: dataFilm.videoLink,\n      className: \"player__video\",\n      poster: dataFilm.posterImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`${APIRoute.Films}/${dataFilm.id}`),\n      type: \"button\",\n      className: \"player__exit\",\n      children: \"Exit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player__controls-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__time\",\n          children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n            className: \"player__progress\",\n            value: timeToogler,\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__toggler\",\n            style: {\n              left: `${timeToogler}%`\n            },\n            children: \"Toggler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__time-value\",\n          children: secondsToHms(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player__controls-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _videoRef$current2;\n\n            if (playPause) {\n              var _videoRef$current;\n\n              dispatch(playOrPause(!playPause));\n              return (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.pause();\n            }\n\n            dispatch(playOrPause(!playPause));\n            return (_videoRef$current2 = videoRef.current) === null || _videoRef$current2 === void 0 ? void 0 : _videoRef$current2.play();\n          },\n          type: \"button\",\n          className: \"player__play\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 19 19\",\n            width: \"19\",\n            height: \"19\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: `${!playPause ? '#play-s' : '#pause'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__name\",\n          children: \"Transpotting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fullScreenHandle(),\n          type: \"button\",\n          className: \"player__full-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 27 27\",\n            width: \"27\",\n            height: \"27\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: \"#full-screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Full screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerPage, \"Je5SSisQoJ3tGeUxAKAaRDP0oyI=\", false, function () {\n  return [useAppSelector, useAppSelector, useDispatch, useNavigate, useParams];\n});\n\n_c = PlayerPage;\nexport default PlayerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Вячеслав/Projects/1479361-what-to-watch-9/src/pages/player-page/player-page.tsx"],"names":["useEffect","useRef","useState","useDispatch","useNavigate","useParams","APIRoute","useAppSelector","playOrPause","NotFoundPage","secondsToHms","d","Number","h","Math","floor","m","s","hDisplay","mDisplay","sDisplay","fullScreenHandle","element","document","querySelector","requestFullscreen","PlayerPage","videoRef","allFilms","state","playPause","dispatch","navigate","id","dataFilm","find","it","time","setTime","duration","setDuration","timeToogler","setTimeToogler","timeOut","setTimeout","current","currentTime","clearTimeout","videoLink","posterImage","Films","left","pause","play"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { APIRoute } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport { playOrPause } from '../../store/action';\nimport NotFoundPage from '../not-found-page/not-found-page';\n\nconst secondsToHms = (d: number) => {\n  d = Number(d);\n  const h = Math.floor(d / 3600);\n  const m = Math.floor(d % 3600 / 60);\n  const s = Math.floor(d % 3600 % 60);\n\n  const hDisplay = h > 0 ? `${h}:` : '';\n  const mDisplay = m > 0 ? `${m}:` : '';\n  const sDisplay = s > 0 ? s : '';\n  return `${hDisplay} ${mDisplay} ${sDisplay}`;\n};\n\nconst fullScreenHandle = () => {\n  const element = document.querySelector('.player__video');\n  if(element?.requestFullscreen){\n    return element?.requestFullscreen();\n  }\n};\n\nfunction PlayerPage() {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const allFilms = useAppSelector((state) => state.allFilms);\n  const playPause = useAppSelector((state) => state.playOrPause);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {id} = useParams();\n  const dataFilm = allFilms.find((it) => it.id === Number(id));\n\n  const [time, setTime] = useState((0));\n  const [duration, setDuration] = useState(0);\n  const [timeToogler, setTimeToogler] = useState(0);\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      if(videoRef.current){\n        setTime(videoRef.current.currentTime);\n        setDuration(videoRef.current.duration - time);\n        setTimeToogler(time * 100 / videoRef.current.duration);\n      }\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [time, duration, playPause]);\n\n  if(!dataFilm){\n    return <NotFoundPage/>;\n  }\n  return (\n    <div className=\"player\">\n\n      <video ref={videoRef} autoPlay src={dataFilm.videoLink} className=\"player__video\" poster={dataFilm.posterImage}></video>\n      <button onClick={() => navigate(`${APIRoute.Films}/${dataFilm.id}`)} type=\"button\" className=\"player__exit\">Exit</button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress className=\"player__progress\" value={timeToogler} max='100'></progress>\n            <div className=\"player__toggler\" style={{left: `${timeToogler}%` }}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">{secondsToHms(duration)}</div>\n        </div>\n        <div className=\"player__controls-row\">\n          <button onClick={ () => {\n            if(playPause){\n              dispatch(playOrPause(!playPause));\n              return videoRef.current?.pause();\n            }\n            dispatch(playOrPause(!playPause));\n            return videoRef.current?.play();\n          } }\n          type=\"button\" className=\"player__play\"\n          >\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              <use xlinkHref={`${!playPause? '#play-s': '#pause'}`}></use>\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">Transpotting</div>\n\n          <button onClick={() => fullScreenHandle()} type=\"button\" className=\"player__full-screen\">\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerPage;\n"]},"metadata":{},"sourceType":"module"}