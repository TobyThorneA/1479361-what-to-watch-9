{"ast":null,"code":"import HomePage from'../../pages/home-page/home-page';import{Route,Routes}from'react-router-dom';import{AppRoute,AuthorizationStatus}from'../../const';import AddReviewPage from'../../pages/add-review-page/add-review-page';import FilmPage from'../../pages/film-page/film-page';import PlayerPage from'../../pages/player-page/player-page';import SignInPage from'../../pages/sign-in-page/sign-in-page';import MyListPage from'../../pages/my-list-page/my-list-page';import NotFoundPage from'../../pages/not-found-page/not-found-page';import{PrivateRoute,PrivateRouteAuthUser}from'../../components/private-route/private-route';import{useAppSelector}from'../../hooks';import LoadingScreen from'../loadin-screen/loading-screen';import HistoryRouter from'../history-route/history-route';import browserHistory from'../../browser-history';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var isCheckedAuth=function isCheckedAuth(authorizationStatus){return authorizationStatus===AuthorizationStatus.Unknown;};function App(){var _useAppSelector=useAppSelector(function(state){return state;}),authorizationStatus=_useAppSelector.authorizationStatus,isDataLoaded=_useAppSelector.isDataLoaded;if(isCheckedAuth(authorizationStatus)||!isDataLoaded){return/*#__PURE__*/_jsx(LoadingScreen,{});}return/*#__PURE__*/_jsx(HistoryRouter,{history:browserHistory,children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:AppRoute.Main,element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.MyList,element:/*#__PURE__*/_jsx(PrivateRoute,{authorizationStatus:authorizationStatus,children:/*#__PURE__*/_jsx(MyListPage,{})})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Player,element:/*#__PURE__*/_jsx(PlayerPage,{})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.Film,element:/*#__PURE__*/_jsx(FilmPage,{})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.SignIn,element:/*#__PURE__*/_jsx(PrivateRouteAuthUser,{authorizationStatus:authorizationStatus,children:/*#__PURE__*/_jsx(SignInPage,{})})}),/*#__PURE__*/_jsx(Route,{path:AppRoute.AddReview,element:/*#__PURE__*/_jsx(AddReviewPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFoundPage,{})})]})});//sdiofsdiofjsdlfsdofsdfksd\n}export default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Вячеслав/Projects/1479361-what-to-watch-9/project/src/components/app/app.tsx"],"names":["HomePage","Route","Routes","AppRoute","AuthorizationStatus","AddReviewPage","FilmPage","PlayerPage","SignInPage","MyListPage","NotFoundPage","PrivateRoute","PrivateRouteAuthUser","useAppSelector","LoadingScreen","HistoryRouter","browserHistory","isCheckedAuth","authorizationStatus","Unknown","App","state","isDataLoaded","Main","MyList","Player","Film","SignIn","AddReview"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,iCAArB,CACA,OAAQC,KAAR,CAAeC,MAAf,KAA4B,kBAA5B,CACA,OAAQC,QAAR,CAAkBC,mBAAlB,KAA4C,aAA5C,CACA,MAAOC,CAAAA,aAAP,KAA0B,6CAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2CAAzB,CACA,OAAUC,YAAV,CAAwBC,oBAAxB,KAAoD,8CAApD,CACA,OAAUC,cAAV,KAAgC,aAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,C,wFAGA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,mBAAD,QAC3BA,CAAAA,mBAAmB,GAAKd,mBAAmB,CAACe,OADjB,EAAtB,CAGP,QAASC,CAAAA,GAAT,EAAe,CAEb,oBAA4CP,cAAc,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAA1D,CAAOH,mBAAP,iBAAOA,mBAAP,CAA4BI,YAA5B,iBAA4BA,YAA5B,CAEA,GAAGL,aAAa,CAACC,mBAAD,CAAb,EAAsC,CAACI,YAA1C,CAAuD,CACrD,mBACE,KAAC,aAAD,IADF,CAGD,CAED,mBACE,KAAC,aAAD,EAAe,OAAO,CAAEN,cAAxB,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAEb,QAAQ,CAACoB,IADjB,CAEE,OAAO,cAAE,KAAC,QAAD,IAFX,EADF,cAKE,KAAC,KAAD,EACE,IAAI,CAAEpB,QAAQ,CAACqB,MADjB,CAEE,OAAO,cACL,KAAC,YAAD,EAAc,mBAAmB,CAAEN,mBAAnC,uBACE,KAAC,UAAD,IADF,EAHJ,EALF,cAaE,KAAC,KAAD,EACE,IAAI,CAAEf,QAAQ,CAACsB,MADjB,CAEE,OAAO,cAAE,KAAC,UAAD,IAFX,EAbF,cAiBE,KAAC,KAAD,EACE,IAAI,CAAEtB,QAAQ,CAACuB,IADjB,CAEE,OAAO,cAAE,KAAC,QAAD,IAFX,EAjBF,cAqBE,KAAC,KAAD,EACE,IAAI,CAAEvB,QAAQ,CAACwB,MADjB,CAEE,OAAO,cACL,KAAC,oBAAD,EAAsB,mBAAmB,CAAET,mBAA3C,uBACE,KAAC,UAAD,IADF,EAHJ,EArBF,cA6BE,KAAC,KAAD,EACE,IAAI,CAAEf,QAAQ,CAACyB,SADjB,CAEE,OAAO,cAAE,KAAC,aAAD,IAFX,EA7BF,cAiCE,KAAC,KAAD,EACE,IAAI,CAAC,GADP,CAEE,OAAO,cAAE,KAAC,YAAD,IAFX,EAjCF,GADF,EADF,CA2CA;AAED,CAED,cAAeR,CAAAA,GAAf","sourcesContent":["import HomePage from '../../pages/home-page/home-page';\nimport {Route, Routes} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport AddReviewPage from '../../pages/add-review-page/add-review-page';\nimport FilmPage from '../../pages/film-page/film-page';\nimport PlayerPage from '../../pages/player-page/player-page';\nimport SignInPage from '../../pages/sign-in-page/sign-in-page';\nimport MyListPage from '../../pages/my-list-page/my-list-page';\nimport NotFoundPage from '../../pages/not-found-page/not-found-page';\nimport  { PrivateRoute, PrivateRouteAuthUser } from '../../components/private-route/private-route';\nimport {  useAppSelector } from '../../hooks';\nimport LoadingScreen from '../loadin-screen/loading-screen';\nimport HistoryRouter from '../history-route/history-route';\nimport browserHistory from '../../browser-history';\n\n\nexport const isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App() {\n\n  const {authorizationStatus, isDataLoaded} = useAppSelector((state) => state);\n\n  if(isCheckedAuth(authorizationStatus) || !isDataLoaded){\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <HistoryRouter history={browserHistory} >\n      <Routes>\n        <Route\n          path={AppRoute.Main}\n          element={<HomePage />}\n        />\n        <Route\n          path={AppRoute.MyList}\n          element={\n            <PrivateRoute authorizationStatus={authorizationStatus}>\n              <MyListPage/>\n            </PrivateRoute>\n          }\n        />\n        <Route\n          path={AppRoute.Player}\n          element={<PlayerPage />}\n        />\n        <Route\n          path={AppRoute.Film}\n          element={<FilmPage />}\n        />\n        <Route\n          path={AppRoute.SignIn}\n          element={\n            <PrivateRouteAuthUser authorizationStatus={authorizationStatus}>\n              <SignInPage/>\n            </PrivateRouteAuthUser>\n          }\n        />\n        <Route\n          path={AppRoute.AddReview}\n          element={<AddReviewPage />}\n        />\n        <Route\n          path='*'\n          element={<NotFoundPage/>}\n        />\n      </Routes>\n    </HistoryRouter>\n  );\n\n  //sdiofsdiofjsdlfsdofsdfksd\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}